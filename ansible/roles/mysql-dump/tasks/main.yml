- name: ensure backup dir exists
  file: path="{{ mysql_dump_dir }}" state=directory

- set_fact:
    mysql_dump_gzip_file_name: "mysql_dump_{{ lookup('pipe', 'date +%Z-%Y-%m-%d-%H-%M-%S') }}.sql"

- set_fact:
    mysql_dump_gzip_file_path: "{{ mysql_dump_dir }}/{{ mysql_dump_gzip_file_name }}"

- name: Save backup
  command: bash -lc "mysqldump -u {{ mysql_username }} -p{{ mysql_password }} --all-databases > {{ mysql_dump_gzip_file_path }}"

- name: Ensure azure blob storage container exists
  command: az storage container create  --name {{ mysql_dump_azure_container_name }}
  ignore_errors: true
  environment:
    AZURE_STORAGE_ACCOUNT: "{{ sunbird_management_storage_account_name }}"
    AZURE_STORAGE_KEY: "{{ sunbird_management_storage_account_key }}"

- name: Upload to azure blob storage
  command: az storage blob upload --name {{ mysql_dump_gzip_file_name }} --file {{ mysql_dump_gzip_file_path }} --container-name {{ mysql_dump_azure_container_name }}
  environment:
    AZURE_STORAGE_ACCOUNT: "{{ sunbird_management_storage_account_name }}"
    AZURE_STORAGE_KEY: "{{ sunbird_management_storage_account_key }}"
  async: 3600
  poll: 10

- name: clean up backup dir after upload
  file: path="{{ mysql_dump_dir }}" state=absent
