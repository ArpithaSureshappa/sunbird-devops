spring.application.name=cios-content-service
server.port={{ application_port }}
management.endpoints.web.exposure.include=health


#-------------------- PostgreSQL configuration--------------------------------

spring.datasource.url=jdbc:postgresql://{{ postgresql_host }}:{{ postgresql_port }}/sunbird
spring.datasource.username={{postgresql_username_sunbird }}
spring.datasource.password={{ postgresql_password_sunbird }}
spring.datasource.driver-class-name=org.postgresql.Driver

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update
spring.main.allow-bean-definition-overriding=true
#-------------------------tranformation-------------------------------------

spring.kafka.bootstrap.servers={{ kafka_servers_list }}
spring.kafka.cornell.topic.name={{ env }}.cornell.progress
spring.kafka.consumer.group.id=cornell-progress
#kafka properties
kakfa.offset.reset.value=latest
kafka.max.poll.interval.ms=15000    
kafka.max.poll.records=100
kafka.auto.commit.interval.ms=10000

transformation.source-to-target.spec.path=/Transformation/cornell.json
cornell.progress.transformation.source-to-target.spec.path=/Transformation/cornellProgressJson.json