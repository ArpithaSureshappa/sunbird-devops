### Default variable file for ml_template_validation_backend_service-service ###

namespace: {{ namespace }}
imagepullsecrets: {{ imagepullsecrets }}
dockerhub: {{ docker_hub_url }}


env:
  javaoptions: {{ml_template_validation_backend_service_java_mem_limit|default('-Xmx4096m')}}

replicaCount: {{ml_template_validation_backend_service_replicacount|default(1)}}
repository: {{ image_ml_template_validation_backend_service_service }}
image_tag: {{ image_tag }}
resources:
  requests:
    cpu: {{ml_template_validation_backend_service_cpu_req|default('100m')}}
    memory: {{ml_template_validation_backend_service_mem_req|default('200Mi')}}
  limits:
    cpu: {{ ml_template_validation_backend_service_cpu_limit|default('2')}}
    memory: {{ml_template_validation_backend_service_mem_limit|default('6144Mi')}}
network:
  port: {{ service_ml_template_validation_backend_service_port }}
  targetport: {{ service_ml_template_validation_backend_service_port }}
strategy:
  type: RollingUpdate
  maxsurge: {{ ml_template_validation_backend_service_maxsurge|default('25%') }}
  maxunavailable: {{ ml_template_validation_backend_service_maxunavailable|default('25%') }}

environmentjs: |-
  FLASK_APP = app.py
  FLASK_RUN_PORT = 5000
  HOSTIP = http://ml-template-validation-backend-service:5000/
  mongoURL = mongodb://{{ml_mongodb_host | default(groups['mongo_master'][0]+':27017')}}/
  db = templateValidation
  userCollection = users
  conditionsCollection = conditions
  validationsCollection = validation
  sampleTemplatesCollection = sampleTemplates
  #AUTH SECRET_KEY
  SECRET_KEY = "{{ml_template_validation_backend_service_secret_key}}"
  admin-token = "{{ml_template_validation_backend_service_admin_token}}" 